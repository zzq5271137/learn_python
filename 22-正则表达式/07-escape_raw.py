"""
转义字符(escape)与原生字符(raw)
"""

import re

"""
转义字符:
在正则表达式中, 有些字符是有特殊意义的字符; 因此如果想要匹配这些字符, 就必须使用反斜杠('\')进行转义;
比如, '$'表示以...结尾, 如果想要匹配它, 必须使用'\$'的形式;
"""
text = 'apple price is $99, orange price is $78'
res = re.search('\$(\d+)', text)
print(res.group())

print("####################################################################")

"""
原生字符:
在正则表达式中, 反斜杠('\')是用来转义的; 在Python中, 它也是用来转义的; 因此如果想要在普通的字符串中匹配出反斜杠,
那么要给出四个反斜杠, 因为你写在正则表达式中的字符串, 它其实还有另外一个身份, 就是它是一个Python字符串,
在Python字符串中, 你写两个反斜杠('\\'), 代表着一个反斜杠(原生的反斜杠), 所以, 你需要四个反斜杠, 
来代表正则表达式中的两个反斜杠, 即正则表达式中的原生反斜杠;
"""
text = r'\n'
res = re.search('\\\\n', text)
print(res.group())

"""
如果在正则表达式中使用原生字符串, 则匹配时只需要两个反斜杠; 因为使用了Python原生字符串, 这两个反斜杠不会去转义,
而是会直接交给正则表达式去解析, 然后在正则表达式的解析中, 会将两个反斜杠转义成一个原生反斜杠, 所以就可以匹配到了;
"""
res = re.search(r'\\n', text)
print(res.group())
